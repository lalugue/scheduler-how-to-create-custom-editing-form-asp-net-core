@using ASP_NET_Core.Models

<h2>Home</h2>

@(Html.DevExtreme().Scheduler()
    .DataSource(d => d.Mvc().Controller("SampleData").LoadAction("Get").Key("ID"))
    .StartDateExpr("StartDate")
    .EndDateExpr("EndDate")
    .TextExpr("Text")
    .Views(new[] {
            SchedulerViewType.Day,
            SchedulerViewType.TimelineDay
        })
    .CurrentView(SchedulerViewType.Day)
    .CurrentDate(new DateTime(2015, 4, 25))
    .FirstDayOfWeek(0)
    .StartDayHour(9)
    .EndDayHour(23)
    .ShowAllDayPanel(false)
    .Height(600)
    .OnAppointmentFormOpening("onAppointmentFormOpening"));

@(Html.DevExtreme().Popup()
    .ID("popup")
    .Width(500)
    .CloseOnOutsideClick(true)
    .Visible(new JS("isCustomPopupVisible"))
    .Title(new JS("editAppointmentData.Text"))
    .ContentTemplate(new TemplateName("popup-template")));

@using (Html.DevExtreme().NamedTemplate("popup-template"))
{
    @(Html.DevExtreme().ScrollView()
        .Width("100%")
        .Height("100%")
        .Content(@<text>
            <img id="popup-image" src="" class="dx-field-label" />
              <div class="dx-field-label">
                <p>
                  <b id="popup-text"></b>
                </p>
                <p id="popup-year"></p>
                <p id="popup-duration"></p>
              </div>

              <div class="dx-field-label">
                <b id="popup-date"></b>
              </div>

              <div class="dx-field-label"><b>Price ($): </b></div>
                <div id="popup-price" class="dx-field-label">
              </div>

              @(Html.DevExtreme().SelectBox()
                .ID("rowView")
                .ElementAttr(new JS("elementAttr"))
                .DataSource(new JS("rows"))
                .Width(400)
                .Placeholder("Pick a row")
                .Value(new JS("editAppointmentData.seatRow"))
                .OnValueChanged("onValueChangedRow")
                )

                @(Html.DevExtreme().SelectBox()
                .ID("seatNumber")
                .ElementAttr(new JS("elementAttr"))
                .DataSource(new JS("rows"))
                .Width(400)
                .Placeholder("Pick a row")
                .Value(new JS("editAppointmentData.seatNumber"))
                .OnValueChanged("onValueChangedNumber")
                )
        </text>)
    )
}


<script>
    var editAppointmentData = {};
    var isCustomPopupVisible = false;
    var customPopupTitle = "";

    var elementAttr = {
        class: "dx-field-label"
    };

    var rows = ['A', 'B', 'C', 'D'];

    function onAppointmentFormOpening(e) {
        e.cancel = true;
        editAppointmentData = { ...e.appointmentData };
        if (editAppointmentData.ID) {
            isCustomPopupVisible = true;
            customPopupTitle = editAppointmentData.Text

            let customPopupOptions = {
                visible: isCustomPopupVisible,
                title: customPopupTitle
            };

            $("#popup").dxPopup("instance").option(customPopupOptions);

            $("#popup-text").text(editAppointmentData.Text);
            $("#popup-year").text(`Year: ${editAppointmentData.Year}`);
            $("#popup-duration").text(`Duration: ${editAppointmentData.Duration} minutes`);


            $("#popup-date").text(`${DevExpress.localization.formatDate(new Date(editAppointmentData.StartDate), "shortTime")} - ${DevExpress.localization.formatDate(new Date(editAppointmentData.EndDate), "shortTime")}`);
            $("#popup-image").attr("src", editAppointmentData.Image);
            $("#popup-price").text(calculatePrice(editAppointmentData.seatRow, editAppointmentData.seatNumber, editAppointmentData.price))

        }
    }

    function calculatePrice(seatRow, seatNumber, price) {
        return seatRow && seatNumber ? setSeatPrice(price, seatRow) : "Pick a seat for pricing";
    }

    function setSeatPrice(price, seatRow) {
        let rowPrice;
        switch (seatRow) {
            case 'A':
                rowPrice = 1;
                break;
            case 'B':
                rowPrice = 2;
                break;
            case 'C':
                rowPrice = 3;
                break;
            case 'D':
                rowPrice = 4;
                break;
            default:
                break;
        }
        return price * rowPrice;
    }

    function onValueChangedRow(e) {
        editAppointmentData.seatRow = e.value;
        if (editAppointmentData.seatRow && editAppointmentData.seatNumber) {
            calculatePrice(editAppointmentData.seatRow, editAppointmentData.seatNumber, editAppointmentData.price);
        }
    }

    function onValueChangedNumber(e) {
        editAppointmentData.seatNumber = e.value;
        if (editAppointmentData.seatRow && editAppointmentData.seatNumber) {
            calculatePrice(editAppointmentData.seatRow, editAppointmentData.seatNumber, editAppointmentData.price);
        }
    }

</script>

